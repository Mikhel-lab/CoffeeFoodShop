<!DOCTYPE html>
<html>
<head>
	<title>Provide email and Pay Now</title>
	<link href="https://www.filepicker.io/api/file/Lh5PgMCTrKBCvUNRhSKy" rel="shortcut icon" />
	<link href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.0.0-alpha/css/bootstrap.css" rel="stylesheet" />
</head>
<body onload="startUp()">
	<div class="container">
		<div class="jumbotron">
			<form class="form" id="pay-form">
				<div id="alert-holder"></div>
				<div class="text-center">
					<p>Please provide your details and click "Pay" to make your payment.</p>
				</div>
				@*<fieldset class="form-group row">
					<label class="col-sm-3" for="firstname">First Name</label>
					<div class=" col-sm-9">
						<input class="form-control" id="firstname" type="text" placeholder="Your First name (optional)" />
					</div>
				</fieldset>*@
				@*<fieldset class="form-group row">
					<label class="col-sm-3" for="lastname">Last Name</label>
					<div class=" col-sm-9">
						<input class="form-control" id="lastname" type="text" placeholder="Your Last name (optional)" />
					</div>*@
				@*</fieldset>*@
				<fieldset class="form-group row">
					<label class="col-sm-3" for="email">Email Address</label>
					<div class=" col-sm-9">
						<input class="form-control" id="email" required="required" type="email" placeholder="Your Email Address" />
					</div>
					<small class="text-muted col-sm-9 col-sm-offset-3">We'll never share your email with anyone else.</small>
				</fieldset>
				<!-- The amount box is not displayed by default. Will stay so unless the GET parameter amountinkobo is a valid integer -->
				<fieldset class="form-group row" id="amountinnaira">
					<label class="col-sm-3" for="amount-in-naira">Amount (in Naira)</label>
					<div class="col-sm-9">
						<div class="input-group">
							<div class="input-group-addon">&#x20a6;</div>
							<input class="form-control" id="amount-in-naira" required="required" type="number" step="100" placeholder="Amount" />
							<div class="input-group-addon">.00</div>
						</div>
					</div>
				</fieldset>
				@*<p class="text-center" id="static-amount">You are paying: <span id="amountinngn">0</span> naira</p>*@
				<fieldset class="form-group row">
					<div class="col-sm-offset-3 col-sm-9">
						<button class="btn btn-secondary" type="button" onclick="validateAndPay()"> Pay </button>
					</div>
				</fieldset>

			</form>
		</div>
	</div>
	<script src="https://js.paystack.co/v1/inline.js"></script>
	<script>
		var public_key = "pk_test_15feee40d2d7a4c6d21232e7ac8efb982fde4ce6";

		function startUp() {
			checkAmountInKobo();
			promptForPublicKey();
		}

		function isValidPublicKey() {
			var publicKeyPattern = new RegExp('^pk_(?:test|live)_', 'i');
			return publicKeyPattern.test(public_key);
		}

		function promptForPublicKey() {
			if (!isValidPublicKey()) {
				public_key = prompt("To run this sample, you need to provide a public key.\n" +
					"Please visit https://dashboard.paystack.co/#/settings/developer to get your " +
					"public key and enter in the box below:", "pk_xxxx_");

				if (!isValidPublicKey()) {
					var error_msg = "You didn't provide a public key. This page will not load.";
					alert(error_msg);
					document.getElementById('pay-form').innerHTML = error_msg;
				}
			}
		}

		function validateAndPay() {
			var email = document.getElementById('email').value;
			//if (!simpleValidEmail(email)) {
			//	//alert("michael@gmail.com");
			//	return;
			//}

			var amountinkobo = getAmountInKobo();
			if (!amountinkobo) {
				document.getElementById('amountinnaira').style.display = "block";
				document.getElementById('static-amount').style.display = "none";
				return;
			}

			//var firstname = document.getElementById('firstname').value;
			//var lastname = document.getElementById('lastname').value;

			payWithPaystack(email, amountinkobo);
		}

		function getParams() {
			var queryDict = {};
			location.search
				.substr(1)
				.split("&")
				.forEach(function (item) {
					queryDict[item.split("=")[0]] = item.split("=")[1];
				});
			return queryDict;
		}

		function checkAmountInKobo() {
			amountinkobo = getParams().amountinkobo;

			if (!simpleValidInt(amountinkobo)) {
				document.getElementById('amountinnaira').style.display = "block";
				document.getElementById('static-amount').style.display = "none";
			} else {
				document.getElementById('amountinngn').innerHTML = amountinkobo / 100;
			}
		}

		function getAmountInKobo() {
			amountinkobo = getParams().amountinkobo;

			if (!amountinkobo) {
				amountinkobo = 100 * +document.getElementById('amount-in-naira').value;
			}

			//if (!simpleValidInt(amountinkobo)) {
			//	alert("Please provide an amount to pay");
			//}

			return amountinkobo;
		}

		function generateREF() {
			var d = new Date().getTime();
			if (window.performance && typeof window.performance.now === "function") {
				d += performance.now(); //use high-precision timer if available
			}
			var ref = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
				var r = (d + Math.random() * 16) % 16 | 0;
				d = Math.floor(d / 16);
				return (c == 'x' ? r : (r & 0x3 | 0x8)).toString(16);
			});
			return ref;
		}

		function simpleValidInt(data) {
			if (+data === parseInt(data)) {
				return true;
			} else {
				return false;
			}
		};

		//function simpleValidEmail(email) {
		//	return email.length < 256 && /^[^]+[A-Za-z0-9]{2,}$/.test(email);
		//};

		function payWithPaystack(validatedemail, amountinkobo) {
			var handler = PaystackPop.setup({
				key: public_key,
				email: validatedemail,
				//firstname: firstname,
				//lastname: lastname,
				amount: amountinkobo,
				ref: generateREF(),


				callback: function () {
					window.location = "https://tchiboconsumershop.azurewebsites.net/";

				},
				onClose: function () {
					// Visitor cancelled payment
					var msg = 'Cancelled. Please click the \'Pay\' button to try again';
					document.getElementById('alert-holder').innerHTML = '<div class="alert alert-danger">' + msg + '</div>';
				}
			});
			handler.openIframe();
		}
	</script>
</body>
</html>